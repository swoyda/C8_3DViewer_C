#include "s21_3dviewer.h"

/**
 * @brief Парсит OBJ-файл и заполняет структуру obj_data.
 *
 * Функция читает содержимое OBJ-файла, извлекая информацию 
 * о вершинах, индексах и других данных, и сохраняет их в структуру obj_data.
 *
 * @param filename Путь к OBJ-файлу, который необходимо распарсить.
 * @param data Указатель на структуру obj_data, в которую будут записаны данные.
 */
int parse_obj_file(const char *filename, obj_data *data);

/**
 * @brief Подсчитывает количество вершин и индексов в OBJ-файле.
 *
 * Функция проходит по содержимому OBJ-файла и подсчитывает, сколько в нём вершин 
 * и индексов. Эта информация используется для выделения памяти.
 *
 * @param file Указатель на открытый OBJ-файл.
 * @param data Указатель на структуру obj_data, в которую будут сохранены подсчитанные значения.
 * @return Целое число, указывающее на успешность выполнения (0 — успех, другое — ошибка).
 */
int count_vertices_and_indices(FILE *file, obj_data *data);

/**
 * @brief Выделяет память для хранения вершин и индексов в структуре obj_data.
 *
 * Функция выделяет необходимую память для хранения данных о вершинах и индексах на основе 
 * предварительно подсчитанных значений.
 *
 * @param data Указатель на структуру obj_data, для которой выделяется память.
 */
void obj_mem_alloc(obj_data *data);

/**
 * @brief Извлекает значения из OBJ-файла и сохраняет их в структуре obj_data.
 *
 * Функция читает конкретные данные из OBJ-файла (например, координаты вершин или индексы) 
 * и сохраняет их в соответствующие поля структуры obj_data.
 *
 * @param file Указатель на открытый OBJ-файл.
 * @param data Указатель на структуру obj_data, куда будут записаны данные.
 */
void parsing_value(FILE *file, obj_data *data);

/**
 * @brief Выводит данные, хранящиеся в структуре obj_data.
 *
 * Функция выводит информацию о вершинах, индексах и другие данные, 
 * хранящиеся в структуре obj_data, на консоль или в другой вывод.
 *
 * @param data Указатель на структуру obj_data, данные которой будут выведены.
 */
// int print_obj_data(obj_data *data);

/**
 * @brief Очищает память, выделенную для структуры obj_data.
 *
 * Функция освобождает всю память, ранее выделенную для хранения данных 
 * о вершинах и индексах в структуре obj_data.
 *
 * @param data Указатель на структуру obj_data, память которой нужно освободить.
 */
void clean_mem_obj(obj_data *data);
